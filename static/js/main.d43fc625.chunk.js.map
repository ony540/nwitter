{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","Profile","_ref","userObj","refreshUser","navigate","useNavigate","auth","_useState","useState","displayName","_useState2","Object","slicedToArray","newDisplayName","setNewDisplayName","onSubmit","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","updateProfile","currentUser","stop","_x","apply","this","arguments","react_default","a","createElement","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","replace","AuthForm","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","newAccount","setNewAccount","_useState7","_useState8","error","setError","_event$target","name","AuthForm_regeneratorRuntime","data","createUserWithEmailAndPassword","sent","signInWithEmailAndPassword","console","log","t0","message","required","Auth","onSocialClick","Auth_regeneratorRuntime","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","index_es","icon","faTwitter","color","size","marginBottom","components_AuthForm","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","NweetTextRef","doc","concat","id","desertRef","ref","attachmentUrl","onDeleteClick","Nweet_regeneratorRuntime","ok","window","confirm","deleteDoc","deleteObject","alert","toggleEditing","_ref3","_callee2","_context2","updateDoc","Fragment","src","alt","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","fileInput","useRef","NweetFactory_regeneratorRuntime","attachmentRef","response","abrupt","uid","uuidv4","uploadString","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","current","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","snapshot","nweetArr","docs","map","document","objectSpread","components_NweetFactory","components_Nweet","key","Navigation","display","justifyContent","react_router_dom","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","length","AppRouter","isLoggedIn","components_Navigation","maxWidth","width","margin","react_router","exact","path","element","routes_Home","routes_Profile","routes_Auth","App","init","setInit","setUserobj","onAuthStateChanged","user","args","split","Router","Boolean","firebase","ReactDOM","createRoot","getElementById","render","base","components_App"],"mappings":"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","file":"static/js/main.d43fc625.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from\"firebase/storage\";\n\n\n const firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN ,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\n  const app = initializeApp(firebaseConfig);\n  export const authService = getAuth();\n  export const dbService = getFirestore();\n  export const storageService = getStorage();\n\n  \n  export default app;","import React, { useState} from \"react\";\nimport { signOut , updateProfile} from \"firebase/auth\";\nimport { authService } from \"../fbase\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction Profile({ userObj,refreshUser }) {\n    const navigate = useNavigate();\n    const auth = authService;\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        signOut(auth);\n        navigate(\"/\", { replace: true }); \n        // 첫페이지로 이동\n    };\n\n\n    const onChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setNewDisplayName(value);\n    };\n\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      if (userObj.displayName !== newDisplayName) {\n        await updateProfile(authService.currentUser, { displayName: newDisplayName });\n        refreshUser();\n      }\n    };\n      \n  return(\n    <div className=\"container\">\n      <form onSubmit={onSubmit}  className=\"profileForm\">\n          <input\n            onChange={onChange}\n            type=\"text\"\n            autoFocus\n            placeholder=\"Display name\"\n            value={newDisplayName}\n            className=\"formInput\"\n          />\n          <input\n            type=\"submit\"\n            value=\"Update Profile\"\n            className=\"formBtn\"\n            style={{\n              marginTop: 10,\n            }}\n           />\n        </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  )\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport {  getAuth,\n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword,} from 'firebase/auth';\n\nfunction AuthForm() {\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n    const [newAccount,setNewAccount]= useState(true);\n    const [error,setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const { target: {name, value}} = event;\n        if( name === \"email\"){\n            setEmail(value);\n        }else if( name === \"password\"){\n            setPassword(value);\n        }\n        // 여기 코드 고쳐봐 벨로퍼트에서 공부한걸로\n    }\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        // 기본행위가 실행되는것을 방지 - 새로고침되어서 스테이트가 사라지는 것을 방지\n\n        try {\n            const auth =getAuth();\n            let data;\n        if(newAccount){\n            //create account - 파이어베이스 내장 기능\n            data = await createUserWithEmailAndPassword(auth, email, password);\n        } else {\n            //log in\n            data = await signInWithEmailAndPassword(auth, email,password);\n        }\n        console.log(data);\n\n    } catch(error) {\n        setError(error.message);\n    }\n        //https://firebase.google.com/docs/reference/js/v8/firebase.auth.EmailAuthProvider\n    };\n\n    const toggleAccount = ( )=> setNewAccount((prev) => !prev);\n\n  return(\n    <div>\n      <form onSubmit={onSubmit}  className=\"container\" >\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}  className=\"authInput\"/>\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}  className=\"authInput\" />\n        <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount}  className=\"authSwitch\" >{newAccount ? \"Log in\" : \"Sing in\"} </span>\n    </div>\n  )\n};\n\nexport default AuthForm;\n\n","import React from \"react\";\nimport {  getAuth,\n  GithubAuthProvider,\n  GoogleAuthProvider,\n  signInWithPopup} from 'firebase/auth';\nimport AuthForm from \"../components/AuthForm\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nfunction Auth() {\n\n    const onSocialClick = async (event) => {\n      const {\n        target:{name},\n    } = event;\n    let provider;\n    const auth= getAuth();\n    if (name === \"google\"){\n      provider = new GoogleAuthProvider();\n\n    } else if ( name ===\"github\"){\n      provider = new GithubAuthProvider();\n    }\n    const data = await signInWithPopup(auth,provider);\n    console.log(data);\n \n    }\n\n  return(\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n          </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  )\n};\n\nexport default Auth;\n\n","import React, { useState } from \"react\";\nimport { dbService,storageService } from \"../fbase\";\nimport {deleteDoc, doc, updateDoc } from \"firebase/firestore\";\nimport { deleteObject, ref } from \"firebase/storage\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Nweet({nweetObj, isOwner}) {\n    const [editing,setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const NweetTextRef =doc(dbService, \"nweets\", `${nweetObj.id}`);\n\n    const desertRef = ref(storageService, nweetObj.attachmentUrl); //삭제하려는 이미지 파일 가리키는 ref\n\n    const onDeleteClick = async() => {\n        const ok = window.confirm(\"Are you sure you want to delete this tweet?\")\n        console.log(ok);\n        if(ok) {\n          try {\n              await deleteDoc(NweetTextRef); //해당하는 트윗 파이어스토어에서 삭제\n            \n            if (nweetObj.attachmentUrl !== \"\") {\n              await deleteObject(desertRef); //삭제하려는 트윗에 이미지 파일이 있는 경우 이미지 파일 스토리지에서 삭제\n            }\n            } catch (error) {\n            window.alert(\"트윗을 삭제하는 데 실패했습니다!\");\n            }  \n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        await updateDoc(NweetTextRef, {\n            text: newNweet,\n            });\n        setEditing(false);\n      };\n\n    const onChange = (event) => {\n        const {target: {value}\n        } = event;\n        setNewNweet(value);\n    };\n  return(\n    <div  className=\"nweet\" >\n   \n    { editing ? ( \n        <>\n        <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input \n            type=\"text\"\n            placeholder=\"Edit your nweet\"\n            value={newNweet} \n            required\n            autoFocus\n            onChange={onChange}\n            className=\"formInput\"\n             />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n        </form>\n        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\n        </>\n\n        ) : (\n            <>\n            <h4>{nweetObj.text}</h4>\n            {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} alt=\"img\" />\n          )}\n            {/* {new Date(nweetObj.createdAt).toLocaleString()} <br></br> */}\n            {isOwner &&\n             <div className=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n              </div>}\n            </>\n             )\n    }\n \n    </div>\n  )\n};\n\nexport default Nweet;\n","import React, { useState ,useRef } from \"react\";\nimport { dbService,storageService } from \"../fbase\";\nimport {collection,  addDoc } from \"firebase/firestore\";\nimport {ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport { v4 as uuidv4 } from 'uuid';\n//uuid는 기본적으로 어떤 식별자를 랜덤으로 생성해줌\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction NweetFactory({userObj}) {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const fileInput = useRef();\n\n      //이게 promise 를 리턴하기 때문에 async와  await하기\n  const onSubmit =  async(event) => { //트윗 업로드\n    if (nweet === \"\") {\n      return;\n    }\n\n    event.preventDefault();\n    try {\n      let attachmentUrl = \"\";\n      if (attachment !== \"\") { //이미지 파일이 있을때\n        const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);  //storage 참조 경로로 파일 업로드 하기\n        const response = await uploadString(attachmentRef, attachment, \"data_url\");\n        //storage 참조 경로에 있는 파일의 URL을 다운로드해서 attachmentUrl 변수에 넣어서 업데이트\n        attachmentUrl = await getDownloadURL(response.ref);\n      }\n      const nweetObj = { //트윗 오브젝트\n        text: nweet,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        attachmentUrl,\n     };\n     await addDoc(collection(dbService, \"nweets\"), nweetObj); \n     //트윗하기 누르면 nweetObj 형태로 새로운 document 생성하여 nweets 콜렉션에 넣기\n     \n    } catch (e) {\n    console.error(\"Error adding document: \", e);\n  }\n    setNweet(\"\"); //subit 칸 비우기\n    setAttachment(\"\"); //어테치 이미지 비우기\n  };\n\n  const onChange = (event) => { //트윗 내용 바뀌는거 \n    const { target:{value},\n  } = event;\n  setNweet(value);\n  };\n\n  const onFileChange = (event) => { //사진업로드\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0]; //파일은 한개라서 그 파일 가져오기\n    const reader = new FileReader(); //fileReader API를 reader라는 이름으로 들고 오고 - 1실행\n\n    reader.onloadend = (finishedEvent) => { //- 3 finishedEvent를 받아와서 이거 실행\n      //console.log(finishedEvent); //콘솔에서 확인\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n\n    };\n    reader.readAsDataURL(theFile); // readAsDataURL을 사용해서 파일 읽기 - 2(이게) 끝나면\n  };\n  //[FileReader API] https://developer.mozilla.org/ko/docs/Web/API/FileReader\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n    //사진 첨부 없이 텍스트만 트윗하고 싶을 때도 있으므로 기본 값을 \"\"로 해야한다.\n    fileInput.current.value = \"\";\n  };\n  return(\n    <div>\n      <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }} />\n        \n          {attachment && (\n              <div className=\"factoryForm__attachment\">\n              <img\n                src={attachment}\n                style={{\n                  backgroundImage: attachment,\n                }}\n                alt=\"preview\"\n              />\n              <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                <span>Remove</span>\n                <FontAwesomeIcon icon={faTimes} />\n              </div>\n              </div>\n            )}\n        </form>\n    </div>\n  )\n};\n\nexport default NweetFactory;\n","import React, { useEffect,useState} from \"react\";\nimport { dbService } from \"../fbase\";\nimport { collection, query, onSnapshot, orderBy, } from \"firebase/firestore\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\n\nfunction Home({userObj}) {\n  const [nweets, setNweets] = useState([]);\n\n\n  useEffect(() => { //실시간 트윗목록 보기\n    const q = query(\n    collection(dbService, \"nweets\"), //dbService안의 콜랙션 nweets의 쿼리스냅샷의 Docs를 \n    orderBy(\"createdAt\", \"desc\")  //생성시기 내림차순으로 들고오기\n    );\n \n    //쿼리가 아니라 스냅샷을 사용해서 실시간으로 볼 수 있음 ! ! \n    onSnapshot(q, (snapshot) => { //onSnapshot은 Snapshot을 얻는 거임  Snapshot은 우리가 가진 query와 같은것 \n    const nweetArr = snapshot.docs.map((document) => ({ //snapshot은 docs를 가지고 있음\n    id: document.id,\n    ...document.data(),\n    }));\n    setNweets(nweetArr); //Nweets 목록 업데이트\n    });\n    }, []);\n\n\n\n  return(\n    <div  className=\"container\">\n    <NweetFactory userObj={userObj} />\n    <div style={{ marginTop: 30 }}>\n      {nweets.map((nweet) => (\n       <Nweet \n       key={nweet.id}\n       nweetObj={nweet} \n       isOwner={nweet.creatorId === userObj.uid}\n      />\n      ))}\n    </div>\n    </div>\n  )\n};\n\nexport default Home;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Navigation({userObj}) {\n  return(\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n          <li><Link to=\"/\"  style={{ marginRight: 10 }} >\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link> </li>\n          <li><Link to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }} >\n             <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n             <span style={{ marginTop: 10,}}>\n            {userObj.displayName.length ? `${userObj.displayName}'s Profile` : \"Profile\"}\n            </span> \n            </Link> \n           </li>\n        </ul>\n        </nav>\n  )\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { BrowserRouter as Router,\n    Route,\n    Routes \n} from \"react-router-dom\";\nimport Profile from \"../routes/Profile\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\n\nfunction AppRouter ({refreshUser, isLoggedIn, userObj}) {\n    return <Router>\n        {isLoggedIn && <Navigation  userObj={userObj}/>}\n    <div\n        style={{\n            maxWidth: 890,\n            width: \"100%\",\n            margin: \"0 auto\",\n            marginTop: 80,\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}>\n    <Routes>\n        {isLoggedIn ? (\n        <>\n         <Route exact path=\"/\" element={<Home userObj={userObj} />}  />\n         <Route exact path=\"/profile\" element={<Profile userObj={userObj} refreshUser={refreshUser} />}  />\n        </>) : (\n        <Route exact path=\"/\" element={<Auth />} />\n        \n        )}\n\n    </Routes>\n    </div>\n</Router>\n\n} \n\nexport default AppRouter;\n","import React,{useEffect, useState} from \"react\";\nimport AppRouter from \"./Router\";\nimport {authService}from \"../fbase\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\nfunction App() {\n  const[init, setInit] = useState(false);\n  // 파이어베이스가 초기화되기를 기다려(처으엔 false) - 그다임 isLoggedIn이 바뀌기를 \n\n  console.log(authService.currentUser);\n  const [userObj,setUserobj] = useState(null);\n\n\n  useEffect(()=>{\n    const auth = getAuth();\n    onAuthStateChanged(auth, (user) => {\n      //사용자의 상태가바뀌었는지 확인하는 파이어베이스 내장함수 ! !\n      if (user) {\n        setUserobj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n          }); //user가 누구인지 정하기\n\n      if (user.displayName === null) { //user의 isplayName이 비어있으면 이메일 앞 아이디로 정하기\n        const name = user.email.split(\"@\")[0];\n        user.displayName = name;\n        }\n      } else {\n      setUserobj(null);\n      }\n      setInit(true);\n      });\n\n  },[]);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserobj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n\n  return(\n  <>\n  {init ? <AppRouter \n   refreshUser={refreshUser}\n   isLoggedIn={Boolean(userObj)} \n   userObj={userObj} /> \n   : \"Initializing...\" }\n  {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n  </>)\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport firebase from \"./fbase\";\nimport \"./styles.css\";\n\nconsole.log(firebase);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <HashRouter base=\"/\">\n      <App   />\n  </HashRouter>\n  // <React.StrictMode>\n  \n  // </React.StrictMode>\n);\n\n/*\nstrictmode는 side effect를 줄이기 위해 일부러 두번씩 실행시킨다고 하네요. \n그래서 dev환경에서만 두번씩 호출되고 production에서는 무시된다고 합니다. */\n\n\n"],"sourceRoot":""}